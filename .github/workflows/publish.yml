name: "Build daemon"

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: mynad
            asset_name: mynad-linux-x86_64.zip
          - os: windows-latest
            artifact_name: mynad.exe
            asset_name: mynad-windows-x86_64.zip
          - os: macos-latest
            artifact_name: mynad
            asset_name: mynad-macos-x86_64.zip
    name: Build daemon for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - name: Install libpcsc
        run: sudo apt-get install libpcsclite-dev
        if: matrix.os == 'ubuntu-latest'
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Build
        run: cargo build --release
      - name: compress files
        env:
          ZIP_FILE: ${{ matrix.asset_name }}
          EXE_FILE: ${{ matrix.artifact_name }}
        if: matrix.os != 'windows-latest'
        run: |
          mv target/release/$EXE_FILE .
          zip $ZIP_FILE $EXE_FILE INSTALL.md
      - name: compress files(Windows)
        env:
          ZIP_FILE: ${{ matrix.asset_name }}
          EXE_FILE: ${{ matrix.artifact_name }}
        if: matrix.os == 'windows-latest'
        run: |
          mkdir C:\myna
          mv .\target\release\$env:EXE_FILE C:\myna
          mv INSTALL.md C:\myna
          Compress-Archive -Path C:\myna -DestinationPath .\$env:ZIP_FILE
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ matrix.asset_name }}
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ github.ref }}
